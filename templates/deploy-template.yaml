AWSTemplateFormatVersion: 2010-09-09
Description: Multi-function packager tool for Amazon CloudFront Edge Functions (uksb-1t9uc46mc)
Transform: AWS::Serverless-2016-10-31

Parameters:
  BUCKET:
    Type: String

Resources:

  LambdaFunctionChainerRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/service-role/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  LambdaFunctionChainer:
   Type: AWS::Serverless::Function
   Properties:
     CodeUri: ../dist/chainer-function.zip
     Handler: index.handler
     Runtime: nodejs14.x
     MemorySize: 128
     Timeout: 3
     Role: !GetAtt LambdaFunctionChainerRole.Arn

  FunctionAssemblyRole:
    Type: "AWS::IAM::Role"
    Properties:
      Policies:
        - PolicyName: CustomPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'iam:ListAttachedRolePolicies'
                  - 'iam:CreateRole'
                  - 'iam:AttachRolePolicy'
                Resource: '*'
                Effect: "Allow"
              - Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                Resource: !Sub arn:aws:s3::${BUCKET}/*
                Effect: "Allow"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/service-role/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/IAMReadOnlyAccess"
        - "arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess"

  LambdaFunctionAssembly:
   Type: AWS::Serverless::Function
   Properties:
     CodeUri: ../dist/assembly-lambda-function.zip
     Handler: lambda_function.lambda_handler
     Runtime: python3.8
     MemorySize: 1024
     Timeout: 120
     Environment:
       Variables:
         LAMBDA_CHAINER_ARN: !Sub ${LambdaFunctionChainer.Arn}:$LATEST
         S3_BUCKET: !Ref BUCKET
         STACK_NAME: !Sub ${AWS::StackName}
     Role: !GetAtt FunctionAssemblyRole.Arn

  CloudFrontFunctionAssembly:
   Type: AWS::Serverless::Function
   Properties:
     CodeUri: ../dist/assembly-function.zip
     Handler: lambda_function.lambda_handler
     Runtime: python3.8
     MemorySize: 512
     Timeout: 120
     Environment:
       Variables:
         S3_BUCKET: !Ref BUCKET
         STACK_NAME: !Sub ${AWS::StackName}
     Role: !GetAtt FunctionAssemblyRole.Arn

Outputs:
  LambdaFunctionChainer:
    Value: !Ref LambdaFunctionChainer
    Export:
      Name: !Sub "${AWS::StackName}-LambdaFunctionChainer"
  LambdaFunctionAssembly:
    Value: !Ref LambdaFunctionAssembly
    Export:
      Name: !Sub "${AWS::StackName}-LambdaFunctionAssembly"
  CloudFrontFunctionAssembly:
    Value: !Ref CloudFrontFunctionAssembly
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontFunctionAssembly"
